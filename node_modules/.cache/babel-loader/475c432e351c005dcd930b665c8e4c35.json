{"ast":null,"code":"import _classCallCheck from \"/Users/shauncallaghan-tt/dev/shaun-stuff/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shauncallaghan-tt/dev/shaun-stuff/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/shauncallaghan-tt/dev/shaun-stuff/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/shauncallaghan-tt/dev/shaun-stuff/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/shauncallaghan-tt/dev/shaun-stuff/react-learning/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/shauncallaghan-tt/dev/shaun-stuff/react-learning/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nvar Order =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key];\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available';\n      var transitionOptions = {\n        classNames: \"order\",\n        key: key,\n        timeout: {\n          enter: 500,\n          exit: 500\n        }\n      };\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }), React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Sorry \", fish ? fish.name : 'fish', \" is no longer available\"));\n      }\n\n      return React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"li\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(TransitionGroup, {\n        component: \"span\",\n        className: \"count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(CSSTransition, Object.assign({}, transitionOptions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, count))), \"lbs \", fish.name, formatPrice(count * fish.price), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.removeFromOrder(key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"\\xD7\"))));\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var orderIds = Object.keys(this.props.order);\n      var total = orderIds.reduce(function (prevTotal, key) {\n        var fish = _this2.props.fishes[key];\n        var count = _this2.props.order[key];\n        var isAvailable = fish && fish.status === 'available';\n\n        if (isAvailable) {\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Order\"), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, orderIds.map(this.renderOrder)), React.createElement(\"div\", {\n        className: \"total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/Users/shauncallaghan-tt/dev/shaun-stuff/react-learning/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","name","price","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions= {\n            classNames: \"order\",\n            key: key,\n            timeout: { enter: 500, exit: 500 }\n        };\n        if (!fish) return null;\n\n        if(!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    Sorry {fish ? fish.name : 'fish'} is no longer available\n                </li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition {...transitionOptions}>\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.removeFromOrder(key)}>\n                            &times;\n                        </button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\"  className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;"]},"metadata":{},"sourceType":"module"}